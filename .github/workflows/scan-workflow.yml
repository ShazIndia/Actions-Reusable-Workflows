# .github/workflows/reusable-workflow.yml
name: Scan Stage

on:
    workflow_call:
      inputs:
        toolchain:
          description: 'Rust toolchain version (e.g., stable, nightly)'
          required: true
          type: string
        target:
          description: 'Compilation target (e.g., x86_64-unknown-linux-gnu)'
          required: true
          type: string
        components:
          description: 'Rust components to install (comma-separated, e.g., clippy, rustfmt, llvm-tools)'
          required: false
          type: string
        rustflags:
          description: 'Rust compiler flags (e.g., -C opt-level=3 -C target-cpu=native -C lto)'
          required: false
          type: string

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3
      name: Checkout code
      
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: "${{ inputs.toolchain }}"
        target: "${{ inputs.target }}"
        components: "${{ inputs.components }}"

    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run Cargo Audit
      run: |
          cargo audit --json > audit_report.json
      continue-on-error: true

    - name: Collect CI Metadata
      run: |
          echo "{ \
            \"workflow\": \"$GITHUB_WORKFLOW\", \
            \"job\": \"$GITHUB_JOB\", \
            \"run_id\": \"$GITHUB_RUN_ID\", \
            \"run_number\": \"$GITHUB_RUN_NUMBER\", \
            \"actor\": \"$GITHUB_ACTOR\", \
            \"repository\": \"$GITHUB_REPOSITORY\", \
            \"sha\": \"$GITHUB_SHA\", \
            \"ref\": \"$GITHUB_REF\", \
            \"branch\": \"$GITHUB_REF_NAME\" \
          }" > ci_metadata.json

    - name: Zip Audit Report and Metadata
      run: |
          zip audit_report.zip audit_report.json ci_metadata.json

    
          
    - name: For testing docker login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Upload Zipped Report to Docker Hub Artifactory
      run: |
        curl -u ${{ secrets.DOCKER_HUB_USERNAME }}:${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} \
        -T audit_report.zip \
        "https://hub.docker.com/v2/repositories/shazindia86/rust-cargo/artifacts/audit_report.zip"
      env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
        
