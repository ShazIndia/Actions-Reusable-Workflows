name: Generate SBOM, and Upload

on:
    workflow_call:
      inputs:
        toolchain:
          description: 'Rust toolchain version (e.g., stable, nightly)'
          required: true
          type: string
        target:
          description: 'Compilation target (e.g., x86_64-unknown-linux-gnu)'
          required: true
          type: string
        components:
          description: 'Rust components to install (comma-separated, e.g., clippy, rustfmt, llvm-tools)'
          required: false
          type: string
        runner_name:
          required: true
          type: string
        

jobs:
  scan:
    runs-on: ${{ inputs.runner_name }}

    steps:

    - uses: actions/checkout@v3
      name: Checkout code
      
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: "${{ inputs.toolchain }}"
        target: "${{ inputs.target }}"
        components: "${{ inputs.components }}"

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Build the Rust project
      run: cargo build --release
      
    - name: Run Cargo Audit
      run: |
          cargo audit --no-fetch --json > audit_report.json
      continue-on-error: true

    - name: Install Cargo CycloneDX
      run: cargo install cargo-cyclonedx

    - name: Generate SBOM
      run: |
        cargo cyclonedx --format json --verbose --all >> sbom.json
        cat sbom.json
