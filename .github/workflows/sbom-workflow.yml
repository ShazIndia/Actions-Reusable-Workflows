name: Generate SBOM, and Upload

on:
    workflow_call:
      inputs:
        toolchain:
          description: 'Rust toolchain version (e.g., stable, nightly)'
          required: true
          type: string
        target:
          description: 'Compilation target (e.g., x86_64-unknown-linux-gnu)'
          required: true
          type: string
        components:
          description: 'Rust components to install (comma-separated, e.g., clippy, rustfmt, llvm-tools)'
          required: false
          type: string
        rustflags:
          description: 'Rust compiler flags (e.g., -C opt-level=3 -C target-cpu=native -C lto)'
          required: false
          type: string

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3
      name: Checkout code
      
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: "${{ inputs.toolchain }}"
        target: "${{ inputs.target }}"
        components: "${{ inputs.components }}"

    - name: Install Cargo CycloneDX
      run: cargo install cargo-cyclonedx

    - name: Generate SBOM
      run: cargo cyclonedx

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Upload SBOM to Docker Hub
      run: |
          docker run --rm \
            -e DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }} \
            -e DOCKER_HUB_ACCESS_TOKEN=${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} \
            -v ${{ github.workspace }}:/workspace \
            shazindia86/rust-app:latest \
            sh -c 'mkdir -p /workspace/sbom && mv /workspace/bom.xml /workspace/sbom/ && docker login -u "$DOCKER_HUB_USERNAME" -p "$DOCKER_HUB_ACCESS_TOKEN" && docker push shazindia86/rust-app:latest'
